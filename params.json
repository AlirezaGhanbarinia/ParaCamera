{
  "name": "ParaCamera",
  "tagline": "Simple android camera to capture and get bitmaps in three simple steps",
  "body": "# ParaCamera (Under Development)\r\n##Simple android camera to capture and get bitmaps in three simple steps:\r\n\r\n##1. Build Camera\r\n```java\r\n\r\n\r\n// Create global camera reference in an activity\r\nCamera camera;\r\n\r\n// Instantiate the camera\r\ncamera = new Camera(this);\r\n\r\n// Build the camera\r\ncamera.builder()\r\n          .setDirectory(\"pics\")\r\n          .setName(\"ali_\" + System.currentTimeMillis())\r\n          .setImageFormat(Camera.IMAGE_JPEG)\r\n          .setCompression(75)\r\n          .setImageHeight(1000);\r\n              \r\n\r\n```\r\n##2. Capture Image\r\n```java\r\n\r\n// Call the camera takePicture method to open the existing camera             \r\ncamera.takePicture();\r\n\r\n```\r\n##3. Get bitmap and saved image path\r\n```java\r\n\r\n// Get the bitmap and image path onActivityResult of an activity\r\n@Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(requestCode == Camera.REQUEST_TAKE_PHOTO){\r\n            Bitmap bitmap = camera.getCameraBitmap();\r\n            if(bitmap != null) {\r\n                picFrame.setImageBitmap(bitmap);\r\n            }else{\r\n                Toast.makeText(this.getApplicationContext(),\"Picture not taken!\",Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n```\r\n```java\r\n\r\n// The bitmap is saved in the app's folder\r\n//  If the saved bitmap is not required use following code\r\n@Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        camera.deleteImage();\r\n    }\r\n\r\n```\r\n\r\n# Gradle\r\n```java\r\ncompile 'com.mindorks:paracamera:0.0.2'\r\n```\r\n\r\n# Permissions\r\n### No permission is required for api 19 (KitKat) and above\r\n\r\n### For api 18 and below WRITE_EXTERNAL_STORAGE is required\r\n```java\r\n//  For api 18 and less WRITE_EXTERNAL_STORAGE is required\r\n<uses-permission\r\n        android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n        android:maxSdkVersion=\"18\" />\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}